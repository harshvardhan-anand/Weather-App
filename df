[33mcommit 9ed61e18cc147dcc3933b16afbe9c26648300021[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Harshvardhan Anand <hharshvardhanaanand@gmail.com>
Date:   Fri Aug 7 13:28:28 2020 +0530

    Weather App

[1mdiff --git a/Wheather App/.vscode/launch.json b/Wheather App/.vscode/launch.json[m
[1mnew file mode 100644[m
[1mindex 0000000..c37c3ba[m
[1m--- /dev/null[m
[1m+++ b/Wheather App/.vscode/launch.json[m	
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m{[m
[32m+[m[32m    // Use IntelliSense to learn about possible attributes.[m
[32m+[m[32m    // Hover to view descriptions of existing attributes.[m
[32m+[m[32m    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387[m
[32m+[m[32m    "version": "0.2.0",[m
[32m+[m[32m    "configurations": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Python: Django",[m
[32m+[m[32m            "type": "python",[m
[32m+[m[32m            "request": "launch",[m
[32m+[m[32m            "program": "${workspaceFolder}\\WheatherApp\\manage.py",[m
[32m+[m[32m            "args": [[m
[32m+[m[32m                "runserver",[m
[32m+[m[32m                "--noreload"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "django": true[m
[32m+[m[32m        }[m
[32m+[m[32m    ][m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Wheather App/Other resource file/New Text Document.txt b/Wheather App/Other resource file/New Text Document.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..6229879[m
[1m--- /dev/null[m
[1m+++ b/Wheather App/Other resource file/New Text Document.txt[m	
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32mfrom bs4 import BeautifulSoup as bs[m
[32m+[m[32mfrom urllib.request import urlopen[m
[32m+[m[32mimport json[m
[32m+[m[32mfrom datetime import datetime[m
[32m+[m[32mfrom dateutil import tz[m
[32m+[m
[32m+[m[32mcity_name = 'Al Bayda'.replace(' ','%20')  #user[m
[32m+[m[32myour_api_key = 'ef9bfadddd3a930acfa7d1ee64fc0bef'[m
[32m+[m[32munits = 'metric'  #user[m
[32m+[m[32mlanguage = 'en'  #user[m
[32m+[m[32mprefered_timezone = 'IST'  # default IST  #user[m
[32m+[m
[32m+[m[32mreq = urlopen([m
[32m+[m[32m    f'https://api.openweathermap.org/data/2.5/weather?q={city_name}&appid={your_api_key}&units={units}&lang={language}'[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mr = req.read()[m
[32m+[m
[32m+[m[32mr = json.loads(r)[m
[32m+[m[32mr[m
[32m+[m
[32m+[m[32mwh_param = {}[m
[32m+[m[32mwh_param['type_of_wheather'] = r['weather'][0]['main']  #for changing image background[m
[32m+[m[32mwh_param['wheather_description_for_user'] = r['weather'][0]['description'][m
[32m+[m[32mwh_param['temperature'] = r['main']['feels_like'][m
[32m+[m[32mwh_param['humidity'] = r['main']['humidity'][m
[32m+[m[32mwh_param['min_temperature'] = r['main']['temp_min'][m
[32m+[m[32mwh_param['max_temperature'] = r['main']['temp_max'][m
[32m+[m[32mwh_param['wind_speed'] = r['wind']['speed'][m
[32m+[m[32mwh_param['wind_direction'] = r['wind']['deg']  # in degrees metrological(? symbol in page)[m
[32m+[m[32mwh_param['cloudiness'] = r['clouds']['all']  #value in percent[m
[32m+[m[32mwh_param['city'] = r['name'][m
[32m+[m[32mwh_param['visibility'] = r['visibility'][m
[32m+[m[32mwh_param['sunrise'] = r['sys']['sunrise'][m
[32m+[m[32mwh_param['sunset'] = r['sys']['sunset'][m
[32m+[m[32mwh_param['time_of_update_utc'] = r['dt'][m
[32m+[m
[32m+[m[32mutc_time = [wh_param['sunrise'],wh_param['sunset'],wh_param['time_of_update_utc']][m
[32m+[m[32mutc_time_str = ['sunrise','sunset','time_of_update_time'][m
[32m+[m[32mconverted_time = {}[m
[32m+[m[32mfor i,j in list(zip(utc_time,utc_time_str)):[m
[32m+[m[32m    time = datetime.fromtimestamp(i).astimezone(tz.gettz(prefered_timezone))[m
[32m+[m[32m    converted_time[j] = str(time.strftime('%X'))[m
[32m+[m[32m    if j=='time_of_update_time':[m
[32m+[m[32m        converted_time['time_of_update_day'] = time.strftime('%x')[m
[32m+[m[41m        [m
[32m+[m[32mfor i in converted_time:[m
[32m+[m[32m    wh_param[i] = converted_time[i][m
\ No newline at end of file[m
[1mdiff --git a/Wheather App/Other resource file/city_names.pkl b/Wheather App/Other resource file/city_names.pkl[m
[1mnew file mode 100644[m
[1mindex 0000000..f83aec8[m
Binary files /dev/null and b/Wheather App/Other resource file/city_names.pkl differ
[1mdiff --git a/Wheather App/Other resource file/clean_city_name.py b/Wheather App/Other resource file/clean_city_name.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e6a2845[m
[1m--- /dev/null[m
[1m+++ b/Wheather App/Other resource file/clean_city_name.py[m	
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mimport time[m
[32m+[m
[32m+[m[32mwith open(r'current.city.list.min.json','r',errors='ignore') as file:[m
[32m+[m[32m    data = file.read()[m
[32m+[m
[32m+[m[32mimport re[m
[32m+[m
[32m+[m[32m# https://regex101.com/r/CoHvtm/1[m
[32m+[m
[32m+[m[32mregex = re.compile(r'name\":\"(\w+(?:\.?)(?: ?)\w+)\"')[m
[32m+[m[32mcleaned_data = re.findall(regex, data)[m
[32m+[m
[32m+[m[32mimport pickle[m
[32m+[m
[32m+[m[32mwith open('city_names.pkl','wb') as f:[m
[32m+[m[32m    pickle.dump(cleaned_data,f)[m
[32m+[m
[32m+[m[32mprint(cleaned_data)[m
[32m+[m[32mtime.sleep(1000)[m
\ No newline at end of file[m
[1mdiff --git a/Wheather App/Other resource file/current.city.list.min.json b/Wheather App/Other resource file/current.city.list.min.json[m
[1mnew file mode 100644[m
[1mindex 0000000..929900e[m
[1m--- /dev/null[m
[1m+++ b/Wheather App/Other resource file/current.city.list.min.json[m	
[36m@@ -0,0 +1 @@[m
[32m+[m[32m[{"id":14256,"coord":{"lon":48.570728,"lat":34.790878},"country":"IR","geoname":{"cl":"P","code":"PPL","parent":132142},"langs":[{"de":"Azad Shahr"},{"fa":"ÿ¢ÿ≤ÿßÿØÿ¥Ÿáÿ±"}],"name":"Azadshahr","stat":{"level":1.0,"population":514102},"stations":[{"id":7030,"dist":9,"kf":1}],"zoom":10},{"id":18918,"coord":{"lon":34.058331,"lat":35.012501},"country":"CY","geoname":{"cl":"P","code":"PPL","parent":146615},"langs":[{"en":"Protaras"},{"ru":"–ü—Ä–æ—Ç–∞—Ä–∞—Å"}],"name":"Protaras","stat":{"level":1.0,"population":20230},"stations":[{"id":5448,"dist":42,"kf":1}],"zoom":6},{"id":23814,"coord":{"lon":47.055302,"lat":34.383801},"country":"IR","geoname":{"cl":"P","code":"PPL","parent":128222},"langs":[{"fa":"⁄©Ÿáÿ±€åÿ≤"}],"name":"Kahriz","stat":{"level":1.0,"population":766706},"stations":[{"id":7022,"dist":10,"kf":1}],"zoom":7},{"id":24851,"coord":{"lon":47.9725,"lat":34.073399},"country":"IR","geoname":{"cl":"P","code":"PPL","parent":125605},"langs":[{"fa":"ŸÜŸàÿ± ÿ¢ÿ®ÿßÿØ"},{"link":"http://en.wikipedia.org/wiki/Nurabad%2C_Lorestan"},{"ru":"–ù—É—Ä–∞–±–∞–¥"}],"name":"Nurabad","stat":{"level":1.0,"population":73528},"stations":[{"id":7022,"dist":80,"kf":1},{"id":7024,"dist":75,"kf":1},{"id":7073,"dist":49,"kf":1}],"zoom":9},{"id":32723,"coord":{"lon":52.309422,"lat":35.23455},"country":"IR","geoname":{"cl":"P","code":"PPL","parent":116401},"langs":[{"fa":"ÿßŸäÿ≥ÿ™⁄ØÿßŸá ⁄Øÿ±ŸÖÿ≥ÿßÿ±"}],"name":"Istgah-e Garmsar","stat":{"level":1.0,"population":49491},"stations":[{"id":7036,"dist":99,"kf":1}],"zoom":8},{"id":32767,"coord":{"lon":51.56889,"lat":35.439442},"country":"IR","geoname":{"cl":"P","code":"PPL","parent":110791},"langs":[{"fa":"ŸÇÿ±⁄ÜŸÉ"}],"name":"Qarchak","stat":{"level":1.0,"population":251834},"stations":[{"id":7032,"dist":36,"kf":1},{"id":7074,"dist":48,"kf":1}],"zoom":9},{"id":41210,"coord":{"lon":49.195999,"lat":36.213001},"country":"IR","geoname":{"cl":"P","code":"PPL","parent":111452},"langs":[{"fa":"ÿÆÿ±ŸÖ ÿØÿ±ŸëŸá"}],"name":"Khorram Darreh","stat":{"level":1.0,"population":50528},"stations":[{"id":7033,"dist":76,"kf":1}],"zoom":12},{"id":50672,"coord":{"lon":44.893799,"lat":2.6185},"country":"SO","geoname":{"cl":"P","code":"PPL","parent":51966},"langs":[{"so":"Wanlaweyn"}],"name":"Wanlaweyn","stat":{"level":1.0,"population":22022},"zoom":9},{"id":52867,"coord"